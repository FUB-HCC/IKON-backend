events {
  worker_connections  4096;  ## Default: 1024
}

http {

proxy_cache_path  /data/nginx/cache  levels=1:2    keys_zone=STATIC:10m inactive=24h  max_size=1g;

##
# HTTPS configurations
##

server {

  listen 443 ssl;
  root /usr/local/nginx/html/;

# Type your domain name below
  server_name ikon-research.imp.fu-berlin.de;

# Configure the Certificate and Key you got from your CA (e.g. Lets Encrypt)
  ssl_certificate     /run/secrets/ssl_crt;
  ssl_certificate_key /run/secrets/ssl_key;

  ssl_session_timeout 1d;
  ssl_session_cache shared:SSL:50m;
  ssl_session_tickets off;

# Only use TLS v1.2 as Transport Security Protocol
  ssl_protocols TLSv1.2;

# Only use ciphersuites that are considered modern and secure by Mozilla
  ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';

# Do not let attackers downgrade the ciphersuites in Client Hello
# Always use server-side offered ciphersuites
  ssl_prefer_server_ciphers on;

# HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
  add_header Strict-Transport-Security max-age=15768000;


  # verify chain of trust of OCSP response using Root CA and Intermediate certs (you will get this file from your CA)
  #ssl_trusted_certificate /path/to/root_CA_cert_plus_intermediates;

  ## OCSP Configuration END

  # Add MIME types
  include mime.types;

  # Register Docker DNS
  resolver 127.0.0.11 ipv6=off;

    location /api/sharing {
        proxy_pass https://SharingService/sharing;
    }

    location /api/graph {
        proxy_pass https://MediaWikiConnector/graph;
        proxy_buffering        on;
        proxy_cache            STATIC;
        proxy_cache_valid      200  1d;
        proxy_cache_use_stale  error timeout invalid_header updating http_500 http_502 http_503 http_504;
    }

  # Do not cache sw.js, required for offline-first updates.
    location /sw.js {
        add_header Cache-Control "no-cache";
        proxy_cache_bypass $http_pragma;
        proxy_cache_revalidate on;
        expires off;
        access_log off;
    }

# Always serve index.html for any request
    location / {
      # Set path
      try_files $uri $uri/ /index.html =404;
    }
  }
  

##
# HTTP configurations
##  
  
server {

  listen 80;
  root /usr/local/nginx/html/;

# Type your domain name below
  server_name ikon-research.imp.fu-berlin.de;

  # Add MIME types
  include mime.types;

  # Register Docker DNS
  resolver 127.0.0.11 ipv6=off;

    location /api/sharing {
        proxy_pass https://SharingService/sharing;
    }

    location /api/graph {
        proxy_pass https://MediaWikiConnector/graph;
        proxy_buffering        on;
        proxy_cache            STATIC;
        proxy_cache_valid      200  1d;
        proxy_cache_use_stale  error timeout invalid_header updating http_500 http_502 http_503 http_504;
    }

  # Do not cache sw.js, required for offline-first updates.
    location /sw.js {
        add_header Cache-Control "no-cache";
        proxy_cache_bypass $http_pragma;
        proxy_cache_revalidate on;
        expires off;
        access_log off;
    }

# Always serve index.html for any request
    location / {
      # Set path
      try_files $uri $uri/ /index.html =404;
    }
  }
}
