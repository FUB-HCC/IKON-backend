version: '3.1'
services:

  nginx:
    container_name: Controller
    build:
      context: .
      dockerfile: ./src/controller/Dockerfile
    ports:
      - "80:80"
    secrets:
      - ssl_key
      - ssl_crt

  postgres:
    container_name: Postgres
    build:
      context: .
      dockerfile: ./src/postgres/Dockerfile
    volumes:
      - ikon_database:/var/lib/postgresql/data:z
      - ./assets/data/gepris:/dump_data/gepris
      - ./assets/data/data_augmentation/:/dump_data/data_augmentation
      - ./assets/data/project_input:/dump_data/project_input
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ikonuser
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
      POSTGRES_DB: ikon
      PGDATA: /usr/postgresql/data
    secrets:
      - postgres_password

  dal:
    container_name: DataAccessLayer
    build:
      context: ./src/dal/
      dockerfile: Dockerfile
    ports:
      - "5433:8080"
    depends_on:
      - postgres
      - mwc
    environment:
      PGUSER: ikonuser
      PGHOST: Postgres
      PGDATABASE: ikon
      PGPORT: 5432
    secrets:
      - postgres_password
      - ssl_key
      - ssl_crt

  mwc:
    container_name: MediaWikiConnector
    build:
      context: ./src/mwc/
      dockerfile: Dockerfile
    ports:
      - "5434:8081"
    environment:
      IKONCODE: /run/secrets/ikoncode_secrets
      SSL_KEY: /run/secrets/ssl_key
      SSL_CRT: /run/secrets/ssl_crt
    secrets:
      - ssl_key
      - ssl_crt
      - ikoncode_secrets

  topicextraction:
    container_name: TopicExtractionService
    build:
      context: ./src/topicextraction/
      dockerfile: Dockerfile
    ports:
      - "80:80"
    environment:
      SSL_KEY: /run/secrets/ssl_key
      SSL_CRT: /run/secrets/ssl_crt
      PG_PASSWORD: /run/secrets/postgres_password
    secrets:
      - ssl_key
      - ssl_crt
      - postgres_password

  notebook:
    container_name: NLPNotebook
    build:
      context: .
      dockerfile: ./src/topicextraction/nlp/Dockerfile.cpu
    volumes:
      - ./src/topicextraction/nlp:/tf/notebooks
      - ./assets/data/nlp:/tf/data
    ports:
      - "5436:8888"
    user: ${CURRENT_UID}
    depends_on:
      - postgres
    environment:
      PG_PASSWORD: /run/secrets/postgres_password
    secrets:
      - postgres_password

secrets:
  postgres_password:
    file: ./assets/secrets/postgres_password
  ssl_crt:
    file: ./assets/ssl/server.crt
  ssl_key:
    file: ./assets/ssl/server.key
  ikoncode_secrets:
    file: ./assets/secrets/ikoncode_secrets

volumes:
    ikon_database:
        external: false